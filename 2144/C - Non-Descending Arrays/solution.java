import java.util.*;import java.io.*;Â public class Main {    static final int MOD = 998244353;        public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        int t = Integer.parseInt(br.readLine());        StringBuilder sb = new StringBuilder();                while (t-- > 0) {            int n = Integer.parseInt(br.readLine());            int[] a = new int[n];            int[] b = new int[n];                        StringTokenizer st = new StringTokenizer(br.readLine());            for (int i = 0; i < n; i++) {                a[i] = Integer.parseInt(st.nextToken());            }                        st = new StringTokenizer(br.readLine());            for (int i = 0; i < n; i++) {                b[i] = Integer.parseInt(st.nextToken());            }                        long[][] dp = new long[n][2];            dp[0][0] = 1;            dp[0][1] = 1;                        for (int i = 1; i < n; i++) {                // Option 1: don't swap at position i                if (a[i] >= a[i-1] && b[i] >= b[i-1]) {                    dp[i][0] = (dp[i][0] + dp[i-1][0]) % MOD;                }                if (a[i] >= b[i-1] && b[i] >= a[i-1]) {                    dp[i][0] = (dp[i][0] + dp[i-1][1]) % MOD;                }                                // Option 2: swap at position i                if (b[i] >= a[i-1] && a[i] >= b[i-1]) {                    dp[i][1] = (dp[i][1] + dp[i-1][0]) % MOD;                }                if (b[i] >= b[i-1] && a[i] >= a[i-1]) {                    dp[i][1] = (dp[i][1] + dp[i-1][1]) % MOD;                }            }                        long result = (dp[n-1][0] + dp[n-1][1]) % MOD;            sb.append(result).append("\n");        }                System.out.print(sb);    }}